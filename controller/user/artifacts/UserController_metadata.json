{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "userDatabaseContractAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "userName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "userRole",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "userType",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "dateOfBirth",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "userCccd",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "userEmail",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "userPhone",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "teamId",
						"type": "uint256"
					}
				],
				"name": "addUser",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "checkExistUser",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "destroy",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllUser",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "userId",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "userName",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "userRole",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "userType",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "dateOfBirth",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "userCccd",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "userEmail",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "userPhone",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "userAddress",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "teamId",
								"type": "uint256"
							}
						],
						"internalType": "struct User[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "login",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "userId",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "userName",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "userRole",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "userType",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "dateOfBirth",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "userCccd",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "userEmail",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "userPhone",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "userAddress",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "teamId",
								"type": "uint256"
							}
						],
						"internalType": "struct User",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "userDatabase",
				"outputs": [
					{
						"internalType": "contract UserDatabase",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"controller/user/UserController.sol": "UserController"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"abstract/Ownable.sol": {
			"keccak256": "0x8e815c5f3f649aa4088098a200dbffbd403dbf38debbf06ee4a4d984d5a38df5",
			"license": "MIT",
			"urls": [
				"bzz-raw://3488759a9fc298c4257a614f21d95ffc74d2f09928c57b5e50c0291a08a3bbd6",
				"dweb:/ipfs/QmQijbEMGKt7R3L4fARqZTSD41Ah7dn5Lf6G3q9JWwEmgx"
			]
		},
		"controller/user/UserController.sol": {
			"keccak256": "0x746845bc2641ef7142989d353e1a5bc4bc4f5f60d821eb50390da61443eccb33",
			"license": "MIT",
			"urls": [
				"bzz-raw://6f65ecf3c6462d7dfbe13a038c9e712c56922e4dec494c4d6ae44a73ac40d4d7",
				"dweb:/ipfs/QmWRq6wwp8suXKXVitomtN4SBBY4svXQqxmSfSP12BEbUS"
			]
		},
		"cursor/user/UserDatabaseCursor.sol": {
			"keccak256": "0x822e0deda4aa033f5ca0d54cf76706fbec6232f83b9d7e2363b679e49891f517",
			"license": "MIT",
			"urls": [
				"bzz-raw://664135931ed1abf246de090f313ee4359faec4c5c3070fc81d26f659eed5522c",
				"dweb:/ipfs/QmUf8q4ZSL7Gv8ZkiVsj7EhddAcxvJg88En75pPwHWBahS"
			]
		},
		"database/user/UserDatabase.sol": {
			"keccak256": "0xbb1ccb302be952f4517374f5e13c8997e36141f7fdfb00bfca0c9fc2c1f87a14",
			"license": "MIT",
			"urls": [
				"bzz-raw://9002f4535277b144ead19e25778fd8cdf5208bd40bf96bffd8911257ae6dfcde",
				"dweb:/ipfs/QmNfaKnakNbH1bRkxL52DZ8kKcB4QojR3PN25q8wgZVeKS"
			]
		},
		"struct/user/User.sol": {
			"keccak256": "0xd3d8312e5f9217b915d28ede7ebd7d16c58b43fba46308765bd4d284efa220c3",
			"license": "MIT",
			"urls": [
				"bzz-raw://0ff426b96725c8134deed5e83a402ec3e290f7d51199cbd9df67f70d6b977c89",
				"dweb:/ipfs/QmbMxCdZoSJs5TmdQDBYcDRfPQuRgepBj9mhgRZKjksUCN"
			]
		}
	},
	"version": 1
}