{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "warehouseDatabaseContractAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "ingressDatabaseContractAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "roughDatabaseContractAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "squashDatabaseContractAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "dryDatabaseContractAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "packageDatabaseContractAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "batchId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "userName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "dryDate",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "warehouseAddress",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "processPhoto",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "keyValue",
						"type": "uint256"
					}
				],
				"name": "addDry",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "userName",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "farmerCccd",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "ingressDate",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "ingressAddress",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "contractPhoto",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "keyValue",
						"type": "uint256"
					}
				],
				"name": "addIngress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "batchId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "userName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "packageDate",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "warehouseAddress",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "processPhoto",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "keyValue",
						"type": "uint256"
					}
				],
				"name": "addPackage",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "batchId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "userName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "roughDate",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "warehouseAddress",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "processPhoto",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "keyValue",
						"type": "uint256"
					}
				],
				"name": "addRough",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "batchId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "userName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "squashDate",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "warehouseAddress",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "processPhoto",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "keyValue",
						"type": "uint256"
					}
				],
				"name": "addSquash",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "warehouseName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "warehouseAddress",
						"type": "string"
					}
				],
				"name": "addWarehouse",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "destroy",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "dryDatabase",
				"outputs": [
					{
						"internalType": "contract DryDatabase",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllDry",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "batchId",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "userName",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "userAddress",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "dryDate",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "warehouseAddress",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "processPhoto",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "keyValue",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "dryIsChecked",
								"type": "bool"
							}
						],
						"internalType": "struct Dry[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllIngress",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "batchId",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "userName",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "userAddress",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "farmerCccd",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "ingressDate",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "ingressAddress",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "contractPhoto",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "keyValue",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "ingressIsChecked",
								"type": "bool"
							}
						],
						"internalType": "struct Ingress[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllPackage",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "batchId",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "userName",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "userAddress",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "packageDate",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "warehouseAddress",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "processPhoto",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "keyValue",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "packageIsChecked",
								"type": "bool"
							}
						],
						"internalType": "struct Package[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllRough",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "batchId",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "userName",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "userAddress",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "roughDate",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "warehouseAdress",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "processPhoto",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "keyValue",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "roughIsChecked",
								"type": "bool"
							}
						],
						"internalType": "struct Rough[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllSquash",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "batchId",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "userName",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "userAddress",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "squashDate",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "warehouseAddress",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "processPhoto",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "keyValue",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "squashIsChecked",
								"type": "bool"
							}
						],
						"internalType": "struct Squash[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllWarehouse",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "warehouseId",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "warehouseName",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "warehouseAddress",
								"type": "string"
							},
							{
								"internalType": "bool",
								"name": "warehouseIsChecked",
								"type": "bool"
							}
						],
						"internalType": "struct Warehouse[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ingressDatabase",
				"outputs": [
					{
						"internalType": "contract IngressDatabase",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "packageDatabase",
				"outputs": [
					{
						"internalType": "contract PackageDatabase",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "roughDatabase",
				"outputs": [
					{
						"internalType": "contract RoughDatabase",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "squashDatabase",
				"outputs": [
					{
						"internalType": "contract SquashDatabase",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "warehouseDatabase",
				"outputs": [
					{
						"internalType": "contract WarehouseDatabase",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"controller/processing/ProcessingController.sol": "ProcessingController"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"abstract/Ownable.sol": {
			"keccak256": "0x8e815c5f3f649aa4088098a200dbffbd403dbf38debbf06ee4a4d984d5a38df5",
			"license": "MIT",
			"urls": [
				"bzz-raw://3488759a9fc298c4257a614f21d95ffc74d2f09928c57b5e50c0291a08a3bbd6",
				"dweb:/ipfs/QmQijbEMGKt7R3L4fARqZTSD41Ah7dn5Lf6G3q9JWwEmgx"
			]
		},
		"controller/processing/ProcessingController.sol": {
			"keccak256": "0xad5c952b3fad69b21df9a87559882868855a828406ddea3c77ea527edfdfe86a",
			"license": "MIT",
			"urls": [
				"bzz-raw://59140ff9d6bfb80b169e8ff7f5c2a8a5823eb587a433c1bdae88dc13ecd00707",
				"dweb:/ipfs/QmUZ4R9ucC9XBtXP1SXxokRdMBJdtbK5us21eRnm25QwLf"
			]
		},
		"cursor/processing/DryDatabaseCursor.sol": {
			"keccak256": "0x1eb70e106c6646b43611344e0d0a36f0d98613ea3718390e2bde219d0d0e6458",
			"license": "MIT",
			"urls": [
				"bzz-raw://a899dd001c05137029b268454e67d4a3d4fe25f5e541851c90ab7a399ee1d76b",
				"dweb:/ipfs/Qmb2iEYRdmd6SijQfGLtwt2ca3fmrWniVuKMSJf36gUSJP"
			]
		},
		"cursor/processing/IngressDatabaseCursor.sol": {
			"keccak256": "0xbfe6448c39f9fad9e374e65d0867cab931792cc8a8762aaec69fedcf68f26576",
			"license": "MIT",
			"urls": [
				"bzz-raw://7a078812a3fcd5ea39bda9d41ad0681b62700b53ee2b81404a5c55683e8ccb76",
				"dweb:/ipfs/QmTgRmUkfVKTD7vci8jQsvxYL7UMsyLQ6RK7KmCgxqGUVf"
			]
		},
		"cursor/processing/PackageDatabaseCursor.sol": {
			"keccak256": "0x08e77af336b61fbb50aa2bbe41cdb933cc060d6efcffb016d01a32b357a95b23",
			"license": "MIT",
			"urls": [
				"bzz-raw://49157142dd87ca41399ebcc861492af71e9a5c1774c629d0ba3e5d6405818373",
				"dweb:/ipfs/QmRkJFYwioaeoXKUUdXGEBNv5voBaiWiP5CFd3fTXo6vbB"
			]
		},
		"cursor/processing/RoughDatabaseCursor.sol": {
			"keccak256": "0x83e804da7783fa3f71e73a4b01ec1be454a84e1c7ed83ed5686f0accd208f0ca",
			"license": "MIT",
			"urls": [
				"bzz-raw://aea1912f078f36e8645f01b3e5a44198fdc8cb5f5ec618cba8c9c33aa532f97c",
				"dweb:/ipfs/QmaDzTHABnqNNQCAouUhoz4wGsyjqRiqgxxedfW9BC9EhR"
			]
		},
		"cursor/processing/SquashDatabaseCursor.sol": {
			"keccak256": "0x6c5db161588cd950c6f7f061425a5767bec7e68c674eac6810023bfdcbc1931b",
			"license": "MIT",
			"urls": [
				"bzz-raw://055b74ba74e0efad6dbc2ce06d4fabd5698f38ec57b89b96a38eb5cba6849b39",
				"dweb:/ipfs/QmfKMoBrCmprWiiGN5b4hdpan27yEjnFebTZAdeHd167t3"
			]
		},
		"cursor/processing/WarehouseDatabaseCursor.sol": {
			"keccak256": "0x51eea456ca1ae621b6f9aa6985e17c26b5de502facffa9516aadd0feed3ee831",
			"license": "MIT",
			"urls": [
				"bzz-raw://7afe58ffe95873112915f712d0afdccc63fced493116e6dfd1c419e6e10af087",
				"dweb:/ipfs/QmeLVBPzQRfTQW6w56EhQpkqE1aupj5TNofDTFpHJEEEd4"
			]
		},
		"database/processing/DryDatabase.sol": {
			"keccak256": "0x0c914b8fe4f088b9686480354637fc4f6034c244327966d51840070ee73a0b26",
			"license": "MIT",
			"urls": [
				"bzz-raw://1cf9b29fa5ee1d3bfa1a4eed0d77b175d203a24dbd095ae58341590be9f665b4",
				"dweb:/ipfs/QmX6tdfdv5ULb55SGTRZFuK65jLvaAn1W9Unc73ApZeCUS"
			]
		},
		"database/processing/IngressDatabase.sol": {
			"keccak256": "0x4b7b9da4e7e2cee35a3870311ecb80167da72e3f5204d74565cc242ec35e7506",
			"license": "MIT",
			"urls": [
				"bzz-raw://31f469ffad9571642a07f78e08eb43f3d00132425c20230207de683a70c11039",
				"dweb:/ipfs/QmZ2hgyPWPbeRyBAL1YDqX99hh6eZFMJgakWjPzsvvkAtf"
			]
		},
		"database/processing/PackageDatabase.sol": {
			"keccak256": "0xf314c67a0090313b188cc518a31382d4273112ff94a98a1cc20e51b4571d215f",
			"license": "MIT",
			"urls": [
				"bzz-raw://541639a452ba21162ec9a3600100b75ff89f1949d1dc9abe9175e6cbfa532d83",
				"dweb:/ipfs/QmSjz3zHATrjCeTUcuHBAz1svztUqgN2DufTSpC4j7dHy9"
			]
		},
		"database/processing/RoughDatabase.sol": {
			"keccak256": "0x6bd11e59e388a1da4b3520dfe36813a3d0fbc57d39eeb14cb9d3ba50222c1126",
			"license": "MIT",
			"urls": [
				"bzz-raw://a2d49b8199608aecafcd6de2ad1b7c91d50c1caa6dffa64fbbb2ef59c5b45a00",
				"dweb:/ipfs/QmedTg3TvKvzrLVuS6SHARQSF7uqEeAJJtHfZVmu9RZSeP"
			]
		},
		"database/processing/SquashDatabase.sol": {
			"keccak256": "0x08d761e236f3371011f6cf77a72ea22b63fa89ba4a73dbd0be3cabc61d793676",
			"license": "MIT",
			"urls": [
				"bzz-raw://0a7c20390a3e90a0340effa6b10c3b318e6431f6e9baca725b086047f3a1856e",
				"dweb:/ipfs/QmZctPjfRAKmM2PzxL9oE49v6AzELwVjJNeFWpfMWpAFEq"
			]
		},
		"database/processing/WarehouseDatabase.sol": {
			"keccak256": "0xac238056cc2a7393b758cf01b945088b57a1066806ab7250fbcdc21105930f06",
			"license": "MIT",
			"urls": [
				"bzz-raw://8eda75bf85178667a70bb48ef4967affce8bbc252a17b026ef993fbd56d72199",
				"dweb:/ipfs/QmYnXh9A5Wwo1jCbdFckpTFTjcWfmXKqzayadihJPNQ4pT"
			]
		},
		"struct/processing/Dry.sol": {
			"keccak256": "0x557c5711a748d6df2b0e97c98869a1d26f4f5c2a4de79d001c3d52928d52c9ca",
			"license": "MIT",
			"urls": [
				"bzz-raw://a0ecec1ea8593eae47f045bdbc7a5cde33c3b248c09dde13985cbad1207c2b48",
				"dweb:/ipfs/Qmc4UYWGMguGndAqAqEFoLr34oujP9ed36L1UajjxXRzfS"
			]
		},
		"struct/processing/Ingress.sol": {
			"keccak256": "0x90fddc92d120102fe9fdc09186cb7bf22f6509d345f05f379003926b16289f15",
			"license": "MIT",
			"urls": [
				"bzz-raw://495461251873536d96fad176a22439d24bbecfc8c3f69d893c30a7c7be631603",
				"dweb:/ipfs/QmYR8pgjr3CXE5VX6TjJ8xyuKU18T7jmgf1MPxjCJHmFfU"
			]
		},
		"struct/processing/Package.sol": {
			"keccak256": "0x0005bc909493e93e7b4057a950ef1282c4ab512fdbf451741f0e7b13b33a646c",
			"license": "MIT",
			"urls": [
				"bzz-raw://7a18ad35f747457cc8397755487d2a2ed844b35c129b97d14f574eb37f0a3ada",
				"dweb:/ipfs/QmRX55HL81FU2cqSSShP2GfBwBRXqPfuVgpsiLMEFhHsF9"
			]
		},
		"struct/processing/Rough.sol": {
			"keccak256": "0x60cb788dc773cd9227fe550a9e33097ecff62e33c4e668971452eecb3f817ef3",
			"license": "MIT",
			"urls": [
				"bzz-raw://ab59df2807f0951b7da3a55adf1b94b05ca77d7f50d6aac505b9fd42ddd12cf0",
				"dweb:/ipfs/QmVWR1v16nM7titUb7JznVeE1Dq6CtPEJrLmncZ22ojPwx"
			]
		},
		"struct/processing/Squash.sol": {
			"keccak256": "0x95af66b46e6b7bb757d0f7222508d485b807056327df2a85e0428f59dc234505",
			"license": "MIT",
			"urls": [
				"bzz-raw://69bde2f4037cc2b940bc81da5de123b54cb4fd439c23b024d5e2be3f552fa8ad",
				"dweb:/ipfs/QmTFbczJH7WQnZdE3cesr9mRWjvmEpsXMK2B887ajtez5W"
			]
		},
		"struct/processing/Warehouse.sol": {
			"keccak256": "0x01bdb70a718addd2a1456eba7af75cc9c718db3beb4b01c2af4fcf80fa4fa131",
			"license": "MIT",
			"urls": [
				"bzz-raw://040ce1c49d2db73e5baa70251e08397fe4dc784414f20b4232afa6c2fc421d99",
				"dweb:/ipfs/QmeMSMZpQxhWWuqwSZkixSPcfTEp4sayzN9Kqupk8osZ5S"
			]
		}
	},
	"version": 1
}